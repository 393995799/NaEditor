{"remainingRequest":"D:\\Project\\NaEditor\\node_modules\\awesome-typescript-loader\\dist\\entry.js!D:\\Project\\NaEditor\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Project\\NaEditor\\src\\common\\script\\action.ts","dependencies":[{"path":"D:\\Project\\NaEditor\\src\\common\\script\\action.ts","mtime":1535074092000},{"path":"D:\\Project\\NaEditor\\src\\common\\script\\action.ts","mtime":1535074092000},{"path":"D:\\Project\\NaEditor\\node_modules\\axios\\index.d.ts","mtime":1519077740000},{"path":"D:\\Project\\NaEditor\\src\\common\\script\\INTERFACE.ts","mtime":1535204665672},{"path":"D:\\Project\\NaEditor\\src\\db\\dbConfig.js","mtime":1533698584000},{"path":"D:\\Project\\NaEditor\\node_modules\\idb\\lib\\idb.d.ts","mtime":1520276302000},{"path":"D:\\Project\\NaEditor\\node_modules\\localforage\\typings\\localforage.d.ts","mtime":1529170699000},{"path":"D:\\Project\\NaEditor\\src\\component\\interface.tsx","mtime":1533698584000},{"path":"D:\\Project\\NaEditor\\src\\component\\CarouselConfig\\interface.ts","mtime":1533698584000},{"path":"D:\\Project\\NaEditor\\src\\component\\ImageHotspotConfig\\interface.tsx","mtime":1533698584000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\version\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\upload\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\upload\\Dragger.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\upload\\interface.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\@types\\react\\index.d.ts","mtime":1532389452000},{"path":"D:\\Project\\NaEditor\\node_modules\\@types\\react\\global.d.ts","mtime":1532389452000},{"path":"D:\\Project\\NaEditor\\node_modules\\csstype\\index.d.ts","mtime":1532213362000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\upload\\Upload.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\upload\\utils.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\mention\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tooltip\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tooltip\\placements.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\timeline\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\timeline\\TimelineItem.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\timeline\\Timeline.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\time-picker\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\moment\\moment.d.ts","mtime":1527836312000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tag\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tag\\CheckableTag.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tabs\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tree-select\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\select\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tree-select\\interface.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tree\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tree\\DirectoryTree.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\tree\\Tree.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\transfer\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\transfer\\search.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\transfer\\operation.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\transfer\\list.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\table\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\table\\interface.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\pagination\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\pagination\\Pagination.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\checkbox\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\checkbox\\Group.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\checkbox\\Checkbox.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\radio\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\radio\\interface.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\radio\\radioButton.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\radio\\group.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\radio\\radio.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\table\\createStore.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\spin\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\table\\Table.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\table\\ColumnGroup.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\table\\Column.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\switch\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\steps\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\slider\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\row\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\grid\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\grid\\col.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\grid\\row.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\rate\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\progress\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\progress\\progress.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\popover\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\popconfirm\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\button\\button.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\button\\button-group.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\notification\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\modal\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\modal\\ActionButton.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\modal\\Modal.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\menu\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\layout\\Sider.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\menu\\MenuItem.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\menu\\SubMenu.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\message\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\locale-provider\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\modal\\locale.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\list\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\list\\Item.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\layout\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\layout\\layout.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\input-number\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\_util\\type.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\input\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\input\\TextArea.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\input\\Search.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\input\\Input.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\input\\Group.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\icon\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\form\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\form\\FormItem.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\form\\Form.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\drawer\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\dropdown\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\dropdown\\dropdown-button.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\dropdown\\dropdown.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\divider\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\date-picker\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\date-picker\\interface.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\col\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\cascader\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\carousel\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\collapse\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\collapse\\CollapsePanel.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\collapse\\Collapse.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\card\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\card\\Meta.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\card\\Grid.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\calendar\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\calendar\\Header.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\button\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\breadcrumb\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\breadcrumb\\BreadcrumbItem.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\breadcrumb\\Breadcrumb.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\badge\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\badge\\ScrollNumber.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\back-top\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\avatar\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\alert\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\auto-complete\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\anchor\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\anchor\\AnchorLink.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\anchor\\Anchor.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\antd\\lib\\affix\\index.d.ts","mtime":499162500000},{"path":"D:\\Project\\NaEditor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Project\\NaEditor\\node_modules\\awesome-typescript-loader\\dist\\entry.js","mtime":1529596564000},{"path":"D:\\Project\\NaEditor\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { message } from 'antd';\r\nimport localforage from \"localforage\";\r\nimport idb from 'idb';\r\nimport DB from '../../db/dbConfig';\r\nimport INTERFACE from './INTERFACE';\r\nimport axios from 'axios';\r\nlet Action = {\r\n    /**\r\n     * 根据模块Id删除模块\r\n     * @param {Object}  入参 带moduleId和pageId\r\n     */\r\n    removeModule({ moduleId, pageId }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                const db = yield idb.open(DB.Name);\r\n                const tx = db.transaction(['page', 'module'], 'readwrite');\r\n                const pageStore = tx.objectStore('page');\r\n                const moduleStore = tx.objectStore('module');\r\n                // 删除页面引用\r\n                let page = yield pageStore.get(pageId);\r\n                page.moduleList = page.moduleList.filter((v) => v !== moduleId);\r\n                // 回填到页面\r\n                yield pageStore.put(page);\r\n                // 删除模块实例\r\n                yield moduleStore.delete(moduleId);\r\n                resolve({\r\n                    result: true,\r\n                    moduleId,\r\n                });\r\n            }));\r\n        });\r\n    },\r\n    /**\r\n     * 添加模块\r\n     * @param {Object} args 入参，模块类型，位置等\r\n     */\r\n    addModule(args = { preModuleId: undefined, moduleTypeId: 1, data: {}, pageId: 1 }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let { preModuleId, moduleTypeId, data, pageId } = args;\r\n            let dbModuleData = yield localforage.getItem('moduleData');\r\n            // 没有模块数据默认为空对象\r\n            data === undefined && (data = {});\r\n            // 根据moduleTypeId查模块名称\r\n            const moduleName = yield Action.getModuleName(moduleTypeId);\r\n            const moduleData = {\r\n                moduleTypeId,\r\n                moduleName,\r\n                data,\r\n                pageId,\r\n            };\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                const db = yield idb.open(DB.Name);\r\n                const tx = db.transaction(['module', 'page'], 'readwrite');\r\n                const pageStore = tx.objectStore('page');\r\n                const moduleStore = tx.objectStore('module');\r\n                const moduleId = yield moduleStore.add(moduleData);\r\n                // 在该page中插入模块id\r\n                let page = yield pageStore.get(pageId);\r\n                page.moduleList === undefined && (page.moduleList = []);\r\n                //没有前一个模块的Id则默认添加到页面最后\r\n                if (preModuleId === undefined) {\r\n                    preModuleId = page.moduleList[page.moduleList.length - 1] || undefined;\r\n                }\r\n                const index = page.moduleList.indexOf(preModuleId);\r\n                page.moduleList.splice(index + 1, 0, moduleId);\r\n                // 更新page\r\n                pageStore.put(page);\r\n                resolve({\r\n                    moduleData: yield moduleStore.get(moduleId),\r\n                    preModuleId,\r\n                });\r\n            }));\r\n        });\r\n    },\r\n    /**\r\n     * 更新模块\r\n     */\r\n    updateModule(moduleData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const db = yield idb.open(DB.Name);\r\n            delete moduleData.tempData; //  临时属性不存到库里\r\n            const tx = db.transaction(['module'], 'readwrite');\r\n            const moduleId = yield tx.objectStore('module').put(moduleData);\r\n            const result = yield tx.objectStore('module').get(moduleId);\r\n            return result;\r\n        });\r\n    },\r\n    /**\r\n     * 移动模块\r\n     */\r\n    positionModule({ moduleId, preModuleId, pageId }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const db = yield idb.open(DB.Name);\r\n            const tx = db.transaction(['page'], 'readwrite');\r\n            let page = yield tx.objectStore('page').get(pageId);\r\n            page.moduleList = page.moduleList.filter((v) => v !== moduleId); //先移除模块\r\n            // 如果没有设置preModuleId，则说明移到第一个模块\r\n            if (preModuleId === undefined) {\r\n                page.moduleList = [moduleId].concat(page.moduleList);\r\n            }\r\n            else {\r\n                const preIndex = page.moduleList.indexOf(preModuleId);\r\n                page.moduleList.splice(preIndex + 1, 0, moduleId); //在preModule后添加模块\r\n            }\r\n            const result = yield tx.objectStore('page').put(page);\r\n            if (result) {\r\n                return {\r\n                    success: true,\r\n                    moduleId,\r\n                    preModuleId,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    success: false,\r\n                };\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * 获得页面所有模块数据\r\n     * @param {String} pageId 页面Id\r\n     */\r\n    getAllModule(pageId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const db = yield idb.open(DB.Name);\r\n            const tx = db.transaction(['module', 'page'], 'readonly');\r\n            const moduleInfos = yield tx.objectStore('module').getAll();\r\n            const pageInfo = yield tx.objectStore('page').get(pageId);\r\n            let promiseArr = [];\r\n            for (let moduleId of pageInfo.moduleList) {\r\n                if (moduleId !== undefined) {\r\n                    promiseArr.push(tx.objectStore('module').get(moduleId));\r\n                }\r\n            }\r\n            const result = yield Promise.all(promiseArr);\r\n            return result;\r\n        });\r\n    },\r\n    /**\r\n     * 根据moduleTypeId获取模块名称\r\n     * @param {Number} moduleTypeId 模块类型Id\r\n     */\r\n    getModuleName(moduleTypeId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const db = yield idb.open(DB.Name);\r\n            const result = yield db.transaction('moduleName').objectStore('moduleName').get(moduleTypeId);\r\n            return result.moduleName;\r\n        });\r\n    },\r\n    /**\r\n     * 删除所有模块\r\n     */\r\n    deleteAllModules() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const db = yield idb.open(DB.Name);\r\n            const moduleResult = yield db.transaction('module').objectStore('module').getAll();\r\n            const moduleIds = moduleResult.map(v => v.moduleId);\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                Promise.all(moduleIds.map((moduleId) => new Promise((resolve, reject) => {\r\n                    const tx = db.transaction('module', 'readwrite').objectStore('module');\r\n                    const result = tx.delete(moduleId).request;\r\n                    result.onsuccess = () => {\r\n                        resolve({ result: true });\r\n                    };\r\n                    result.onerror = () => {\r\n                        reject({ result: false });\r\n                    };\r\n                }))).then(() => {\r\n                    resolve(true);\r\n                });\r\n            }));\r\n        });\r\n    },\r\n    /**\r\n     * 新增页面\r\n     */\r\n    addPage(pageData = { name: '页面名称' }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const NAME = `page`;\r\n            const db = yield idb.open(DB.Name);\r\n            const tx = db.transaction(NAME, 'readwrite').objectStore(NAME);\r\n            const pageId = yield tx.put(pageData);\r\n            return yield db.transaction(NAME, 'readonly').objectStore(NAME).get(pageId);\r\n        });\r\n    }\r\n};\r\nconst DBAction = {\r\n    getAllModule(pageId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data } = (yield axios(INTERFACE.getAllModule, {\r\n                params: {\r\n                    pageId,\r\n                }\r\n            }));\r\n            if (data.success === true) {\r\n                return data.data;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n    },\r\n    /**\r\n    * 添加模块\r\n    * @param {Object} args 入参，模块类型，位置等\r\n    */\r\n    addModule(args) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { data } = (yield axios(INTERFACE.addModule, {\r\n                params: args,\r\n            }));\r\n            if (data.success === true) {\r\n                message.success('添加成功', 1);\r\n                return data.data;\r\n            }\r\n            else {\r\n                message.error(data.message);\r\n                return {};\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * 根据模块Id删除模块\r\n     * @param {Object}  入参 带moduleId和pageId\r\n     */\r\n    removeModule({ moduleId, pageId }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = (yield axios(INTERFACE.removeModule, {\r\n                params: {\r\n                    moduleId,\r\n                    pageId\r\n                }\r\n            })).data;\r\n            if (result.success === true) {\r\n                return {\r\n                    result: true,\r\n                    moduleId,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    result: false,\r\n                };\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * 移动模块\r\n     */\r\n    positionModule({ moduleId, preModuleId, pageId }) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = (yield axios(INTERFACE.positionModule, {\r\n                params: { moduleId, preModuleId, pageId }\r\n            })).data;\r\n            if (result.success === true) {\r\n                return {\r\n                    success: true,\r\n                    moduleId,\r\n                    preModuleId,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    success: false,\r\n                };\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * 更新模块\r\n     */\r\n    updateModule(moduleData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            delete moduleData.tempData; // 删除临时数据\r\n            const result = (yield axios(INTERFACE.updateModule, {\r\n                params: {\r\n                    moduleData,\r\n                },\r\n            })).data;\r\n            if (result.success === true) {\r\n                message.success('保存成功', 1);\r\n                return result.data;\r\n            }\r\n            else {\r\n                return {};\r\n            }\r\n            ;\r\n        });\r\n    },\r\n};\r\n// if ((window as any).BASE_DATA.dbSource === '1') {\r\nAction = DBAction;\r\n// }\r\nwindow.Action = Action;\r\nexport default Action;\r\n",{"version":3,"file":"D:/Project/NaEditor/src/common/script/action.ts","sourceRoot":"D:/Project/NaEditor/","sources":["node_modules\\thread-loader\\dist\\cjs.js!D:\\Project\\NaEditor\\src\\common\\script\\action.ts"],"names":[],"mappings":"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","sourcesContent":["import { message } from 'antd';\nimport { IModuleData, IModule } from './../../component/interface';\nimport localforage from \"localforage\";\nimport idb from 'idb';\nimport DB from '../../db/dbConfig';\nimport INTERFACE from './INTERFACE';\nimport axios from 'axios';\n\nlet Action: any = {\n    /**\n     * 根据模块Id删除模块  \n     * @param {Object}  入参 带moduleId和pageId\n     */\n    async removeModule({ moduleId, pageId }: { moduleId: number, pageId: number }) {\n        return new Promise(async (resolve, reject) => {\n            const db = await idb.open(DB.Name);\n            const tx = db.transaction(['page', 'module'], 'readwrite');\n            const pageStore = tx.objectStore('page');\n            const moduleStore = tx.objectStore('module');\n\n            // 删除页面引用\n            let page = await pageStore.get(pageId);\n            page.moduleList = page.moduleList.filter((v: number) => v !== moduleId);\n            // 回填到页面\n            await pageStore.put(page);\n\n            // 删除模块实例\n            await moduleStore.delete(moduleId);\n\n            resolve({\n                result: true,\n                moduleId,\n            })\n\n        })\n    },\n    /**\n     * 添加模块\n     * @param {Object} args 入参，模块类型，位置等\n     */\n    async addModule(args = { preModuleId: undefined, moduleTypeId: 1, data: {}, pageId: 1 }) {\n\n        let { preModuleId, moduleTypeId, data, pageId } = args;\n\n        let dbModuleData = await localforage.getItem('moduleData');\n\n\n        // 没有模块数据默认为空对象\n        data === undefined && (data = {});\n\n\n        // 根据moduleTypeId查模块名称\n        const moduleName = await Action.getModuleName(moduleTypeId);\n\n        const moduleData = {\n            moduleTypeId,\n            moduleName,\n            data,\n            pageId,\n        }\n\n        return new Promise(async (resolve, reject) => {\n            const db = await idb.open(DB.Name);\n            const tx = db.transaction(['module', 'page'], 'readwrite');\n\n            const pageStore = tx.objectStore('page');\n            const moduleStore = tx.objectStore('module');\n\n            const moduleId = await moduleStore.add(moduleData);\n\n            // 在该page中插入模块id\n            let page = await pageStore.get(pageId);\n            page.moduleList === undefined && (page.moduleList = []);\n\n            //没有前一个模块的Id则默认添加到页面最后\n            if (preModuleId === undefined) {\n                preModuleId = page.moduleList[page.moduleList.length - 1] || undefined;\n            }\n            const index = page.moduleList.indexOf(preModuleId);\n            page.moduleList.splice(index + 1, 0, moduleId);\n\n            // 更新page\n            pageStore.put(page);\n\n            resolve({\n                moduleData: await moduleStore.get(moduleId),\n                preModuleId,\n            });\n        })\n    },\n    /**\n     * 更新模块\n     */\n    async updateModule(moduleData: IModuleData) {\n        const db = await idb.open(DB.Name);\n        delete moduleData.tempData; //  临时属性不存到库里\n        const tx = db.transaction(['module'], 'readwrite');\n        const moduleId = await tx.objectStore('module').put(moduleData);\n        const result = await tx.objectStore('module').get(moduleId);\n        return result;\n    },\n    /**\n     * 移动模块\n     */\n    async positionModule({ moduleId, preModuleId, pageId }: { moduleId: number, preModuleId?: number, pageId: number }) {\n        const db = await idb.open(DB.Name);\n        const tx = db.transaction(['page'], 'readwrite');\n        let page = await tx.objectStore('page').get(pageId);\n        page.moduleList = page.moduleList.filter((v: number) => v !== moduleId); //先移除模块\n        // 如果没有设置preModuleId，则说明移到第一个模块\n        if (preModuleId === undefined) {\n            page.moduleList = [moduleId].concat(page.moduleList)\n        } else {\n            const preIndex = page.moduleList.indexOf(preModuleId);\n            page.moduleList.splice(preIndex + 1, 0, moduleId); //在preModule后添加模块\n        }\n        const result = await tx.objectStore('page').put(page);\n        if (result) {\n            return {\n                success: true,\n                moduleId,\n                preModuleId,\n            }\n        } else {\n            return {\n                success: false,\n            }\n        }\n    },\n    /**\n     * 获得页面所有模块数据\n     * @param {String} pageId 页面Id\n     */\n    async getAllModule(pageId: number) {\n\n        const db = await idb.open(DB.Name);\n        const tx = db.transaction(['module', 'page'], 'readonly');\n        const moduleInfos = await tx.objectStore('module').getAll();\n\n        const pageInfo = await tx.objectStore('page').get(pageId);\n        let promiseArr = [];\n        for (let moduleId of pageInfo.moduleList) {\n            if (moduleId !== undefined) {\n                promiseArr.push(tx.objectStore('module').get(moduleId))\n            }\n        }\n        const result = await Promise.all(promiseArr);\n        return result;\n    },\n    /**\n     * 根据moduleTypeId获取模块名称\n     * @param {Number} moduleTypeId 模块类型Id\n     */\n    async getModuleName(moduleTypeId: number) {\n        const db = await idb.open(DB.Name);\n        const result = await db.transaction('moduleName').objectStore('moduleName').get(moduleTypeId);\n        return result.moduleName;\n    },\n    /**\n     * 删除所有模块\n     */\n    async deleteAllModules() {\n\n        const db = await idb.open(DB.Name);\n        const moduleResult = await db.transaction('module').objectStore('module').getAll();\n        const moduleIds = moduleResult.map(v => v.moduleId);\n\n        return new Promise(async (resolve, reject) => {\n            Promise.all(moduleIds.map((moduleId) => new Promise((resolve, reject) => {\n                const tx = db.transaction('module', 'readwrite').objectStore('module');\n                const result = (tx.delete(moduleId) as any).request;\n\n                result.onsuccess = () => {\n                    resolve({ result: true });\n                }\n                result.onerror = () => {\n                    reject({ result: false });\n                }\n            }))).then(() => {\n                resolve(true);\n            });\n\n        })\n\n    },\n    /**\n     * 新增页面\n     */\n    async addPage(pageData = { name: '页面名称' }) {\n        const NAME = `page`\n        const db = await idb.open(DB.Name);\n        const tx = db.transaction(NAME, 'readwrite').objectStore(NAME);\n        const pageId = await tx.put(pageData)\n        return await db.transaction(NAME, 'readonly').objectStore(NAME).get(pageId);\n    }\n\n}\n\nconst DBAction = {\n    async getAllModule(pageId: number) {\n        const { data } = (await axios(INTERFACE.getAllModule, {\n            params: {\n                pageId,\n            }\n        }));\n        if (data.success === true) {\n            return data.data;\n        } else {\n            return [];\n        }\n    },\n    /**\n    * 添加模块\n    * @param {Object} args 入参，模块类型，位置等\n    */\n    async addModule(args: { preModuleId?: number, moduleTypeId: number, data?: any, pageId: number }) {\n        const { data } = (await axios(INTERFACE.addModule, {\n            params: args,\n        }));\n        if (data.success === true) {\n            message.success('添加成功', 1);\n            return data.data;\n        } else {\n            message.error(data.message);\n            return {};\n        }\n    },\n    /**\n     * 根据模块Id删除模块  \n     * @param {Object}  入参 带moduleId和pageId\n     */\n    async removeModule({ moduleId, pageId }: { moduleId: number, pageId: number }) {\n        const result = (await axios(INTERFACE.removeModule, {\n            params: {\n                moduleId,\n                pageId\n            }\n        })).data;\n        if (result.success === true) {\n            return {\n                result: true,\n                moduleId,\n            }\n        } else {\n            return {\n                result: false,\n            }\n        }\n    },\n    /**\n     * 移动模块\n     */\n    async positionModule({ moduleId, preModuleId, pageId }: { moduleId: number, preModuleId?: number, pageId: number }) {\n\n        const result = (await axios(INTERFACE.positionModule, {\n            params: { moduleId, preModuleId, pageId }\n        })).data;\n\n        if (result.success === true) {\n            return {\n                success: true,\n                moduleId,\n                preModuleId,\n            }\n        } else {\n            return {\n                success: false,\n            }\n        }\n    },\n    /**\n     * 更新模块\n     */\n    async updateModule(moduleData: IModuleData) {\n        delete moduleData.tempData; // 删除临时数据\n        const result = (await axios(INTERFACE.updateModule, {\n            params: {\n                moduleData,\n            },\n        })).data;\n        if (result.success === true) {\n            message.success('保存成功', 1);\n            return result.data;\n        } else {\n            return {};\n        };\n    },\n}\n\n// if ((window as any).BASE_DATA.dbSource === '1') {\nAction = DBAction;\n// }\n\n(window as any).Action = Action;\n\nexport default Action;"]}]}