{"remainingRequest":"D:\\Project\\NaEditor\\node_modules\\babel-loader\\lib\\index.js!D:\\Project\\NaEditor\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Project\\NaEditor\\src\\db\\dataInitial.js","dependencies":[{"path":"D:\\Project\\NaEditor\\src\\db\\dataInitial.js","mtime":1535090154000},{"path":"D:\\Project\\NaEditor\\.babelrc","mtime":1535117171942},{"path":"D:\\Project\\NaEditor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Project\\NaEditor\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000},{"path":"D:\\Project\\NaEditor\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n/**\n * 初始化模块名称\n */\nlet initModuleName = (() => {\n    var _ref = _asyncToGenerator(function* () {\n\n        const data = [{\n            moduleTypeId: 1,\n            moduleName: '自定义代码'\n        }, {\n            moduleTypeId: 2,\n            moduleName: '图片热区'\n        }, {\n            moduleTypeId: 3,\n            moduleName: '文字'\n        }, {\n            moduleTypeId: 4,\n            moduleName: '图片轮播'\n        }];\n\n        const StoreName = `moduleName`;\n        const db = yield idb.open(DB.Name);\n\n        const Store = db.transaction(StoreName, 'readwrite').objectStore(StoreName);\n\n        data.forEach(function (v) {\n            Store.add(v);\n        });\n    });\n\n    return function initModuleName() {\n        return _ref.apply(this, arguments);\n    };\n})();\n\n/**\n * 初始化页面\n */\nlet initPage = (() => {\n    var _ref2 = _asyncToGenerator(function* () {\n\n        const data = [{\n            pageId: 1,\n            pageName: '测试页面'\n        }];\n\n        const StoreName = `page`;\n        const db = yield idb.open(DB.Name);\n        const Store = db.transaction(StoreName, 'readwrite').objectStore(StoreName);\n\n        data.forEach(function (v) {\n            Store.add(v);\n        });\n    });\n\n    return function initPage() {\n        return _ref2.apply(this, arguments);\n    };\n})();\n\n(function () {\n    var enterModule = require('react-hot-loader').enterModule;\n\n    enterModule && enterModule(module);\n})();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nimport DB from '../db/dbConfig';\nimport idb from 'idb';\nwindow.initModuleName = initModuleName;\n\nwindow.initPage = initPage;\n\nfunction init() {\n    const initFuns = [initModuleName, initPage];\n    initFuns.forEach(v => {\n        try {\n            v();\n        } catch (e) {\n            console.log(e);\n        }\n    });\n}\n\nconst _default = init;\nexport default _default;\n;\n\n(function () {\n    var reactHotLoader = require('react-hot-loader').default;\n\n    var leaveModule = require('react-hot-loader').leaveModule;\n\n    if (!reactHotLoader) {\n        return;\n    }\n\n    reactHotLoader.register(initModuleName, 'initModuleName', 'D:/Project/NaEditor/src/db/dataInitial.js');\n    reactHotLoader.register(initPage, 'initPage', 'D:/Project/NaEditor/src/db/dataInitial.js');\n    reactHotLoader.register(init, 'init', 'D:/Project/NaEditor/src/db/dataInitial.js');\n    reactHotLoader.register(_default, 'default', 'D:/Project/NaEditor/src/db/dataInitial.js');\n    leaveModule(module);\n})();\n\n;",{"version":3,"sources":["src\\db\\dataInitial.js"],"names":["data","moduleTypeId","moduleName","StoreName","db","idb","open","DB","Name","Store","transaction","objectStore","forEach","add","v","initModuleName","pageId","pageName","initPage","window","init","initFuns","e","console","log"],"mappings":";;AAGA;;;;iCAGA,aAAgC;;AAE5B,cAAMA,OAAO,CAAC;AACVC,0BAAc,CADJ;AAEVC,wBAAY;AAFF,SAAD,EAGV;AACCD,0BAAc,CADf;AAECC,wBAAY;AAFb,SAHU,EAMV;AACCD,0BAAc,CADf;AAECC,wBAAY;AAFb,SANU,EASV;AACCD,0BAAc,CADf;AAECC,wBAAY;AAFb,SATU,CAAb;;AAcA,cAAMC,YAAa,YAAnB;AACA,cAAMC,KAAK,MAAMC,IAAIC,IAAJ,CAASC,GAAGC,IAAZ,CAAjB;;AAEA,cAAMC,QAAQL,GAAGM,WAAH,CAAeP,SAAf,EAA0B,WAA1B,EAAuCQ,WAAvC,CAAmDR,SAAnD,CAAd;;AAEAH,aAAKY,OAAL,CAAa,aAAK;AACdH,kBAAMI,GAAN,CAAUC,CAAV;AACH,SAFD;AAGH,K;;oBAxBcC,c;;;;;AA4Bf;;;;kCAGA,aAA0B;;AAEtB,cAAMf,OAAO,CAAC;AACVgB,oBAAQ,CADE;AAEVC,sBAAU;AAFA,SAAD,CAAb;;AAKA,cAAMd,YAAa,MAAnB;AACA,cAAMC,KAAK,MAAMC,IAAIC,IAAJ,CAASC,GAAGC,IAAZ,CAAjB;AACA,cAAMC,QAAQL,GAAGM,WAAH,CAAeP,SAAf,EAA0B,WAA1B,EAAuCQ,WAAvC,CAAmDR,SAAnD,CAAd;;AAEAH,aAAKY,OAAL,CAAa,aAAK;AACdH,kBAAMI,GAAN,CAAUC,CAAV;AACH,SAFD;AAGH,K;;oBAdcI,Q;;;;;;;;;;;;;AArCf,OAAOX,EAAP,MAAe,gBAAf;AACA,OAAOF,GAAP,MAAgB,KAAhB;AA8BAc,OAAOJ,cAAP,GAAwBA,cAAxB;;AAsBAI,OAAOD,QAAP,GAAkBA,QAAlB;;AAGA,SAASE,IAAT,GAAgB;AACZ,UAAMC,WAAW,CAACN,cAAD,EAAiBG,QAAjB,CAAjB;AACAG,aAAST,OAAT,CAAiBE,KAAK;AAClB,YAAI;AACAA;AACH,SAFD,CAEE,OAAOQ,CAAP,EAAU;AACRC,oBAAQC,GAAR,CAAYF,CAAZ;AACH;AACJ,KAND;AAOH;;iBAIcF,I;AAAf;;;;;;;;;;;;4BA/DeL,c;4BA+BAG,Q;4BAmBNE,I","file":"dataInitial.js","sourceRoot":"D:/Project/NaEditor","sourcesContent":["import DB from '../db/dbConfig';\nimport idb from 'idb';\n\n/**\n * 初始化模块名称\n */\nasync function initModuleName() {\n\n    const data = [{\n        moduleTypeId: 1,\n        moduleName: '自定义代码',\n    }, {\n        moduleTypeId: 2,\n        moduleName: '图片热区',\n    }, {\n        moduleTypeId: 3,\n        moduleName: '文字',\n    }, {\n        moduleTypeId: 4,\n        moduleName: '图片轮播',\n    }];\n\n    const StoreName = `moduleName`;\n    const db = await idb.open(DB.Name);\n\n    const Store = db.transaction(StoreName, 'readwrite').objectStore(StoreName);\n\n    data.forEach(v => {\n        Store.add(v);\n    })\n}\nwindow.initModuleName = initModuleName;\n\n\n/**\n * 初始化页面\n */\nasync function initPage() {\n\n    const data = [{\n        pageId: 1,\n        pageName: '测试页面'\n    }];\n\n    const StoreName = `page`;\n    const db = await idb.open(DB.Name);\n    const Store = db.transaction(StoreName, 'readwrite').objectStore(StoreName);\n\n    data.forEach(v => {\n        Store.add(v);\n    })\n}\n\nwindow.initPage = initPage;\n\n\nfunction init() {\n    const initFuns = [initModuleName, initPage];\n    initFuns.forEach(v => {\n        try {\n            v();\n        } catch (e) {\n            console.log(e)\n        }\n    })\n}\n\n\n\nexport default init;"]}]}